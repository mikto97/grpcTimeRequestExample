syntax = "proto3";

package grpc;

option go_package = "homework5/grpc";

service Auction {
  rpc Bid (BidRequest) returns (BidResponse);
  rpc ReplicateBidRequest(BidRequest) returns (Response);
  rpc Result (ResultRequest) returns (ResultResponse);
  rpc HandleLeadershipTransfer(LeadershipTransferRequest) returns (LeadershipTransferResponse);


}
message LeadershipTransferRequest {
    int64 auction_end_time = 1; // Timestamp of auction end time
}

message LeaderCheckRequest {
    // Add fields if needed
}

message LeaderCheckResponse {
    bool isLeader = 1;
}
// Health check request message
message HealthCheckRequest {
}

// Health check response message
message HealthCheckResponse {
    bool healthy = 1;
}

message BidRequest {
  string bidder_id = 1;
  int32 amount = 2;
  string request_id = 3;
}

message BidResponse {
  string outcome = 1;
}

message Response {
  string request_id = 1;
  string error = 2;
  bool success = 3;
  string message = 4;
}

message Responses {
  repeated Response responses = 1;
}

message LeadershipTransferResponse {
    bool success = 1;
}

message ResultRequest {
  string request_id = 1;
}

message ResultResponse {
  string outcome = 1;
}

message Empty {} 

message RepeatedResponse { 
  repeated Response responses = 1;
}